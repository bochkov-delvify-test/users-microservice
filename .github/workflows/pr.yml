name: PR checks

on: [ push ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-poetry-lint-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-lint

      - name: Install lint dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.5.1
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi --with lint

      - name: Test with flake8
        run: |
          python -m flake8 delvify

      - name: Test with black
        run: |
          python -m black --check delvify

      - name: Test with mypy
        run: |
          python -m mypy delvify


  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-poetry-test-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-test

      - name: Install test dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.5.1
          poetry config virtualenvs.create false
          poetry self add poetry-dotenv-plugin
          poetry install --no-interaction --no-ansi --with test

      - name: Test with pytest
        run: |
          poetry run pytest

